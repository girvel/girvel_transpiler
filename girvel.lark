start: module

module: module_element*
module_element: include
    | function_definition
    | struct_definition

include: "include" ESCAPED_STRING

function_definition: signature block
signature: CNAME function_name arguments
function_name: (CNAME "::")? CNAME
arguments: "(" variable_definition? ("," variable_definition)* ","? ")"

struct_definition: "struct" CNAME "{" (variable_definition ";")* "}"

block: "{" statement (";" statement)* "}"
statement: expression
    | variable_definition
    | variable_assignment
expression: if | operation | call | identifier | LITERAL

variable_definition: CNAME CNAME
variable_assignment: identifier "=" expression
identifier: identifier_piece ("." identifier_piece)*
identifier_piece: CNAME | call

if: "if" expression block "else" block

operation: CNAME INFIX_OPERATOR CNAME
INFIX_OPERATOR: ">"

call: function_name "(" expression? ("," expression)* ","? ")"

LITERAL: SIGNED_INT | ESCAPED_STRING

%import common.WS
%import common.CNAME
%import common.ESCAPED_STRING
%import common.SIGNED_INT
%import common.CPP_COMMENT
%ignore WS
%ignore CPP_COMMENT